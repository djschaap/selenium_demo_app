[website_monitoring_alerts]
action.email = 1
action.email.bcc = $result.EMAILBCC$
action.email.cc = $result.EMAILCC$
action.email.include.results_link = 0
action.email.include.view_link = 0
action.email.message.alert = Current Status: $result.status$\
\
DETAILS\
\
Item ID: $result.ITEM_ID$\
Site: $result.URL$\
Error: $result.error$\
Server: $result.server$\
\
Test URL: $result.test_url$\
Loaded: $result.test_url_loaded$
action.email.priority = 2
action.email.subject.alert = $result.ITEM_ID$ - Status: $result.status$
action.email.to = $result.EMAILTO$
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 0
alert.track = 0
counttype = number of events
cron_schedule = */5 * * * *
dispatch.earliest_time = -60m@m
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.charting.chart = line
display.visualizations.custom.type = selenium_demo_app.base64_image
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = selenium_demo_app
request.ui_dispatch_view = search
search = index=web sourcetype=_json results.status=*\
| table _time, application.item_id, application.url, results.status, results.error, application.server, tests{}.url, tests{}.url_loaded\
| rename application.item_id as ITEM_ID, application.url as URL, application.server as server, results.* as *, tests{}.* as test_* \
| sort ITEM_ID, _time\
| streamstats count as streak by ITEM_ID, status reset_on_change=true \
| autoregress streak as previous_streak\
| dedup ITEM_ID sortby -_time\
| lookup selenium_monitoring_list ITEM_ID output THRESHOLD, EMAILTO, EMAILCC, EMAILBCC, ENABLED \
| eval status = if(status=="Failed", "Down", "Up") \
| eval notification = case((status="Down" and streak == THRESHOLD), 1, (status="Up" and streak=1 and previous_streak >= THRESHOLD and streak + previous_streak > 1), 1, 1==1, 0)\
| search notification=1 EMAILTO=* ENABLED=1\
| eval test_url = mvindex(test_url,-1)\
| eval test_url_loaded = mvindex(test_url_loaded,-1)\
| addinfo\
| where info_max_time - _time < 300

[website_performance_details]
action.email.useNSSubject = 1
alert.track = 0
description = Test details for a site given an item_id and time range
dispatch.earliest_time = -24h@h
dispatch.latest_time = now
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.charting.chart = line
display.visualizations.custom.type = event-timeline-viz.event-timeline-viz
display.visualizations.show = 0
display.visualizations.type = custom
request.ui_dispatch_app = selenium_demo_app
request.ui_dispatch_view = search
search = index=web sourcetype=_json source=web_monitoring application.item_id="$item_id$" results.status=*\
| spath path=results.logs{} output=logs \
| spath path=tests{} output=test \
| table _time, application.*, environment.*, results.status, results.error, results.tests_count, results.tests_run, results.duration, results.screenshot, logs, test\
| eval last_page = mvindex(mvfilter(match(test, "Open")),-1)
